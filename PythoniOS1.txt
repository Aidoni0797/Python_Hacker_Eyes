Как использовать Python для автоматизации iOS

Часто нам приходится совершать со своим iPhone (iDONi не имеет iPhone, хочу плакать) монотонные
и довольно скучные манипуляции, которые заставляют нас с завистью смотреть на десктопы с их
безграничными возможностями настройки, скриптинга и автоматизации действий. Да что там десктопы -
даже на пользователей Android с их вездесущим Tasker'ом, с помощью которого можно 
запрограммировать смартфон на что угодно. в iOS существование подобные приложений невозможно,
но у нас есть небольшая лазейка.

Введение

В этой главе я хочу рассказать о Pythonista - среде разработки на языке Python для iOS,
которая позволяет в том числе писать полноценные приложения с графическим интерфейсом.
Однако мы будем использовать ее для несколько иных целей - для создания простых подсобных
скриптов, которые будут автоматизировать рутинные операции.

Pythonista включает в себя множество предустановленных бибилиотек, в том числе те, что помогут
нам получить доступ к функциональности iOS. Например, можно привести clipboard, позволяющий
читать и писать в буфер обмена, contacts для работы с адресной книгой, keychain, location и др.

Pythonista включает в себя всю необходимую документацию, так что для ее изучения не потребуется
подключиться к Интернету. Встроенный редактор Pythonista достаточно развит, имеет подсветку
ситаксиса, автодополнение и дополнительные клавиши на клавиатуре. Более того, его тоже можно
заскриптовать.

Кроме встроенных, нам также понадобятся сторонние Python-модули. Для Pythonista существуют два
аналога всем известного pip. This pipista 2.0 (https://gist.github.com/pudquick/4317095)
and Pypi (https://gist.github.com/anonymous/5243199). Чтобы установить пакет с помощью первого,
необходимо сохранить скрипт в корневой каталог и выполнить такую команду:
import pipista
pipista.pypi_install('Name_of_library')

У этой библиотечки есть также функции pypi_download(), pypi_search() and pypi_versions(), 
что позволяет считать ее полноценной заменой pip. Второй установщик требует более четких запросов.
Например, необходимо указать версию пакета - это удобно, если по какой-либо причине не хочешь
использовать последнюю версию.
from Pypi import Installer
Installer('Name_of_library', 'Version').install()

У этого установщика также есть дополнительные функции

Как запустить скрипт с главного экрана.
Для этого есть две возможности: Pythonista Shortcut and Lunch Center Pro. В первом случае
все просто: достаточно зайти с девайса на сайт (https://omz-software.com/pythonista/docs/
ios/pythonista_shortcuts.html), ввести имя скрипта и аргументы, нажать на кнопку Create Shortcut,
затем сохранить эту страницу на рабочий стол, используя стандартные функции Safari.

Вторая программа куда интереснее. Чтобы запустить скрипт из нее, необходимо создать событие и в поле
URL прописать вот такую строку: "pythonista://script_name?action=run&args=", where 
script_name -имя скрипта с учетом иеархии каталогов, а после args= необходимо перечислить
аргументы (если они есть). Также присутствует возможность запуска по времени или с
определенной регулярностью.

Скрипты
Напишем несколько скриптов, дабы облегчить жизнь нам и нашим близким. Возможно, некоторые из них 
(или все) кому-то покажутся бесполезными, но зато они дают представление о том, что можно
сделать с помощью Pythonista, и могут выступать в качестве некой базы для твоих экспериментов.
Всего скриптов девять, и они очень разнообразны.
(ничего не понимает iDONi из данной темы. Интересно человек пишет, поидее его же должен 
понимать человек или iDONi ты совсем тупой. Сколько можно человек должен быть тупым
чтобы не понимать элементарные вещи)