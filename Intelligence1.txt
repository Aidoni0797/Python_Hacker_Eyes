Если ты часто имеешь дело с разными компьютерами, тебе, конечно, нужен простой в использовании
и быстрый инструмент для сбора информации о системе. Сегодня мы покажем, как сделать такую
программу, отсылающую собранные данные в Telegram, а еще попрактикуемся в программировании
на Python.
Чтобы просто посмотреть IP-адрес и другие настройки сети, тебе придется обратиться к командной
строке и выполнить команду ipconfig / all. Ситуация одна из самых частых для эникейщиков и
удаленных шаманов, но она хотя бы быстро решаема. Однако если придется собирать более
серьезный набор информации о машине, с которой ты будешь работать, - без автоматизации
не обойтись. Этим мы сегодня и займемся.
Имей в виду, что эта программа может использоваться как для быстрого сбора информации о своей
системе, так и для кражи идентифицирующей информации с компьютера жертвы. Мы - граждане 
законопослушные, поэтому пусть это и не пароли, но, чтобы не раздражать правоохранителей,
все тесты будут проводиться не изолированых виртуальных машинах.
Несанкционированный доступ к компьютерной информации - преступление. Ни автор, ни редакция не 
несут ответственности за твои действияю

Инструменты.
Сначала давай разберемся, где будем писать код. Можно кодить в обычном виндовом "Блокноте",
но мы воспользуемя специальной IDE for Python - Pycharm. Установка и настройка просты как два
рубля: скачал установщик, запустил - и кликай себе "Далее", пока есть такая кнопка.
Еще нам потребуется Python. Я буду использовать версию - с ней точно все работает.

Задачи
Давай сначала обрисуем, что мы вообще планируем делать. Я планирую собирать следующую
информацию:
1. IP-адрес
2. MAC-адрес
3. Имя пользователя
4. Тип операционной системы
5. Скорость работы системы
6. Время
7. Скриншот
8. Скорость интернет-соединения
9. Модель процессора

И отправляться это все будет прямиком тебе в телегу через социальной бот.

Зачем?
Наверняка у тебя возник вопрос: зачем может понадобиться MAC-адрес или модель процессора?
Эти параметры меняются очень и очень редко, так что прекрасно подходят для фингерпринтинга.
Даже если пользователь кпит более быстрый интернет-канал или поменяет часовой пояс, ты без
особого труда сможешь определить, что уже имел дело с этим компьютером. Стоит помнить, что
ровно такие же методы используют хитрые рекламщики для идентификации пользователей, да и
разработчики триальных версий программ тоже. Эта глава поможет чуть лучше понять, что можно
узнать о твоем компьютере в полностью автоматическом режиме, а как применить эту информацию -
решать только тебе.
В этой главе мы не будем показывать, как свормировать устойчивый к незначительным
изменениям идентификатор, который поможет однозначно определить конкретный компьютер.

Создаем основу программы
Для отправки данных я решил воспользоваться Telegram-ботом. Создать его ты можешь через
BotFather (https://t.me/BotFather), а после сохранить token своего творения. Публиковать
его нельзя - любой, кто получит этот токен, сможет захватить контроль над твоим ботом.

Для подключения к Bot API "телеги" нужны всего две строки:

import telebot
bot = telebot.TeleBot("token from BotFather") #Подключаем бота

Чтобы оценить быстродействие, можно написать еще пару строк. Весь дальнейший код расположим
между ними. Описанное выше подключение бота уже вписано сюда.

import tlebot
from datetime import datetime

bot = tlebot.TeleBot("token")

start = datetime.now() #Начало отсчета
#Сюда поместим наш основу, поэтому оставляем место
ends = datetime.now() #Конец отсчета
workspeed = format(ends - start) #Вычисление времени

Теперь перейдем собственно к сбору данных.