Скорость интернет-соединения

from speedtest import Speedtest #Импорт модуля. Рассматривался ранее

inet = Speedtest()
download = float(str(inet.download())[0:2] + "." #Входящая скорость
		+ str(round(inet.download(),2))[1])*0.125
uploads = float(str(inet.upload())[0:2]+"." #Исходящая скорость
		+ str(round(inet.download(),2))[1])*0.125

Скорость замеряется библиотекой сервиса Speedtest.net и соответственно выдает результат
в мегабитах, а не мегабайтах. Чтобы это исправить, разделим численный результат на 8 или
умножим на 0,125 - это одно и то же. Манипуляцию проделываем дважды - для входящей и
исходящей скорости.
Важно понимать, что замер не претендует на сверхточность, потому что мы никак не можем легко
проверить, какую часть канала потребляют другие программы или даже другие устройства в сети.
Если ты подключился к рабочей станции удаленно, твое соединение тоже что-то будет потреблять.
В программе поправка на это не реализована из-за ее слишком низкой точности и трудоемкости.

Часовой пояс и время

import psutil

zone = psutil.boot_time() #Узнает время, заданное на компьютере
time = datetime.fromtimestamp(zone) #Переводит данные в читаемый вид

Если ты настраиваешь чей-то сервер или слишком удаленный компьютер, время может отличаться.
Ко всем прочим данным добавим и показания часов - информация лишней не бывает. Если ты не знал,
неправильно выставленное время и/или часовой пояс может вызывать сбои при подключении
к сайтам, использующим HTTPS, а этот кусочек кода позволит легко выявить такие проблемы.

Частота процессора

import psutil

cpu = psutil.cpu_freq()

Может помочь выявить причину тормознутости компьютера: если процессор постоянно молотит на 
полную, но программы виснут - процессор устарел, а если простаивает - виновата программа. 
Да и просто общее представление о железе дает.

Более глубокий фингерпринтинг
В этой главе умышленно не рассказывается, как получить идентификатор жесткого диска или GUID
установленной Windows: мы не методичку для рекламщиков пищем, а программровать тренируемся.
ТЕм не менее ты легко можешь добавить сбор и такой информации, воспользовавшись консольной
утилитой wmic. Ее вывод можно парсить с помощью Python-скрипта, так что даже не придется
лишние обвязки. На скриншоте приведен пример получения серийного номера BIOS.